<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-12-18 at 13:23:37.
 */
App::uses('Runner', 'Model');
class RunnerTest extends PHPUnit_Framework_TestCase
{
    protected $runner;

    protected function setUp()
    {
        $this->runner = new Runner;
    }

    protected function tearDown()
    {
    }

    /**
     * @covers Runner::setRunner
     * @todo   Implement testSetRunner().
     */
    public function testSetRunner()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    public function testUnsetRunner()
    {
        $this->runner->setRunner(2);
        $this->runner->unsetRunner(2);

        $this->assertFalse($this->runner->getRunner(2));
    }

    public function testResetRunner()
    {
        $this->runner->setRunner(2);
        $this->runner->setRunner(1);
        $this->runner->resetRunner();

        $this->assertFalse($this->runner->getRunner(2));
    }

    public function testGetRunner()
    {
        $this->runner->setRunner(2);

        $this->assertTrue($this->runner->getRunner(2));
    }

    public function testGetAllRunner()
    {
        $this->runner->setRunner(2);
        $this->runner->setRunner(1);

        $this->assertEquals(array(false, true, true), $this->runner->getAllRunner());
    }

    public function testSingleRun()
    {
        $this->runner->setRunner(0);
        $this->runner->setRunner(2);
        $this->runner->singleRun();

        $this->assertEquals(array(true, true, false), $this->runner->getAllRunner());
    }

    public function testDoubleRun()
    {
        $this->runner->setRunner(0);
        $this->runner->setRunner(1);
        $this->runner->doubleRun();

        $this->assertEquals(array(false, true, true), $this->runner->getAllRunner());
    }

    public function testTripleRun()
    {
        $this->runner->setRunner(0);
        $this->runner->setRunner(1);
        $this->runner->setRunner(2);
        $this->runner->tripleRun();

        $this->assertEquals(array(false, false, true), $this->runner->getAllRunner());
    }
}
